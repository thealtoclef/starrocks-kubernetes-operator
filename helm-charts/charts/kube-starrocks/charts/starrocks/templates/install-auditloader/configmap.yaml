{{- if .Values.installAuditLoader.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "starrockscluster.name" . }}-install-auditloader-shell
  namespace: {{ template "starrockscluster.namespace" . }}
data:
  install_auditloader.sh: |-
    #!/bin/bash

    set -e

    # Variables
    MYSQL_HOST=$1
    MYSQL_PORT=$2

    echo "Connecting to StarRocks at $MYSQL_HOST:$MYSQL_PORT"

    # Create audit database and table
    echo "Creating audit database and table if they don't exist..."
    mysql --connect-timeout 30 -h $MYSQL_HOST -P $MYSQL_PORT -u root --password=$MYSQL_PWD <<EOF
    CREATE DATABASE IF NOT EXISTS;

    CREATE TABLE IF NOT EXISTS starrocks_audit_db__.starrocks_audit_tbl__ (
      \`queryId\`           VARCHAR(64)                COMMENT "Unique query ID",
      \`timestamp\`         DATETIME         NOT NULL  COMMENT "Query start time",
      \`queryType\`         VARCHAR(12)                COMMENT "Query type (query, slow_query, connectionï¼‰",
      \`clientIp\`          VARCHAR(32)                COMMENT "Client IP address",
      \`user\`              VARCHAR(64)                COMMENT "User who initiates the query",
      \`authorizedUser\`    VARCHAR(64)                COMMENT "user_identity",
      \`resourceGroup\`     VARCHAR(64)                COMMENT "Resource group name",
      \`catalog\`           VARCHAR(32)                COMMENT "Catalog name",
      \`db\`                VARCHAR(96)                COMMENT "Database that the query scans",
      \`state\`             VARCHAR(8)                 COMMENT "Query state (EOF, ERR, OK)",
      \`errorCode\`         VARCHAR(512)               COMMENT "Error code",
      \`queryTime\`         BIGINT                     COMMENT "Query latency in milliseconds",
      \`scanBytes\`         BIGINT                     COMMENT "Size of the scanned data in bytes",
      \`scanRows\`          BIGINT                     COMMENT "Row count of the scanned data",
      \`returnRows\`        BIGINT                     COMMENT "Row count of the result",
      \`cpuCostNs\`         BIGINT                     COMMENT "CPU resources consumption time for query in nanoseconds",
      \`memCostBytes\`      BIGINT                     COMMENT "Memory cost for query in bytes",
      \`stmtId\`            INT                        COMMENT "Incremental SQL statement ID",
      \`isQuery\`           TINYINT                    COMMENT "If the SQL is a query (0 and 1)",
      \`feIp\`              VARCHAR(128)               COMMENT "IP address of FE that executes the SQL",
      \`stmt\`              VARCHAR(1048576)           COMMENT "Original SQL statement",
      \`digest\`            VARCHAR(32)                COMMENT "Slow SQL fingerprint",
      \`planCpuCosts\`      DOUBLE                     COMMENT "CPU resources consumption time for planning in nanoseconds",
      \`planMemCosts\`      DOUBLE                     COMMENT "Memory cost for planning in bytes",
      \`warehouse\`         VARCHAR(128)               COMMENT "Warehouse name"
    ) ENGINE = OLAP
    DUPLICATE KEY (\`queryId\`, \`timestamp\`, \`queryType\`)
    COMMENT "Audit log table"
    PARTITION BY RANGE (\`timestamp\`) ()
    DISTRIBUTED BY HASH (\`queryId\`) BUCKETS 3 
    PROPERTIES (
      "dynamic_partition.time_unit" = "DAY",
      "dynamic_partition.start" = "30",
      "dynamic_partition.end" = "3",
      "dynamic_partition.prefix" = "p",
      "dynamic_partition.buckets" = "3",
      "dynamic_partition.enable" = "true",
    );
    EOF

    # Install the plugin
    echo "Installing AuditLoader plugin..."
    mysql --connect-timeout 30 -h $MYSQL_HOST -P $MYSQL_PORT -u root --password=$MYSQL_PWD -e "INSTALL PLUGIN FROM '$PLUGINS_DIR/auditloader.zip';"
{{- end }}
